---
import Layout from "../layouts/Layout.astro";
import { XMLParser } from "fast-xml-parser";

const FEED_URL = "https://www.skysports.com/rss/12040";
const parser = new XMLParser({
  ignoreAttributes: false,
  attributeNamePrefix: "",
  removeNSPrefix: true,
});

let feedItems = [];
let feedMeta = {
  title: "Sky Sports",
  description: "Latest headlines across world sport",
};
let feedError = null;

try {
  const response = await fetch(FEED_URL, {
    headers: {
      "User-Agent": "Builder.io Sports Feed (https://builder.io)",
      Accept: "application/rss+xml, application/xml;q=0.9, */*;q=0.8",
    },
    cache: "no-store",
  });
  if (!response.ok) {
    throw new Error(`Feed responded with ${response.status}`);
  }

  const xml = await response.text();
  const parsed = parser.parse(xml);
  const channel = parsed?.rss?.channel;

  if (channel?.title) {
    feedMeta.title = channel.title;
  }
  if (channel?.description) {
    feedMeta.description = channel.description;
  }

  const rawItems = Array.isArray(channel?.item)
    ? channel.item
    : channel?.item
    ? [channel.item]
    : [];

  feedItems = rawItems
    .map((item) => {
      const cleanDescription = typeof item.description === "string"
        ? item.description.replace(/<[^>]+>/g, " ")
        : "";
      const publishedAt = item.pubDate ? new Date(item.pubDate) : null;
      return {
        guid: item.guid?.["#text"] ?? item.guid ?? item.link ?? item.title,
        title: item.title ?? "Untitled update",
        link: item.link ?? "#",
        description: cleanDescription.trim().replace(/\s+/g, " "),
        category: Array.isArray(item.category)
          ? item.category.join(", ")
          : item.category ?? null,
        publishedAt,
      };
    })
    .filter((item) => item.guid && item.link)
    .slice(0, 12);
} catch (error) {
  console.error("Failed to load Sky Sports RSS", error);
  feedError = error instanceof Error ? error.message : "Unknown error";
}

const formattedUpdatedAt = feedItems.length && feedItems[0].publishedAt
  ? feedItems[0].publishedAt.toLocaleString("en-GB", {
      dateStyle: "medium",
      timeStyle: "short",
    })
  : null;
---

<Layout title="Sports Updates - The Daily Pulse">
  <main class="min-h-screen bg-slate-950 text-slate-100">
    <section class="bg-gradient-to-r from-indigo-600 via-purple-600 to-sky-500">
      <div class="mx-auto flex max-w-6xl flex-col gap-6 px-6 py-16">
        <div class="flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
          <div>
            <p class="text-sm uppercase tracking-[0.3em] text-indigo-100">Live Sports Desk</p>
            <h1 class="text-4xl font-extrabold tracking-tight md:text-5xl">{feedMeta.title}</h1>
            <p class="mt-3 max-w-2xl text-base text-indigo-100/90">{feedMeta.description}</p>
          </div>
          <div class="rounded-lg border border-white/20 bg-white/10 px-5 py-4 text-sm text-indigo-100">
            <p class="font-semibold uppercase tracking-wide">Source</p>
            <a href={FEED_URL} class="mt-1 inline-flex items-center gap-2 text-indigo-50 underline-offset-4 transition hover:underline" target="_blank" rel="noreferrer">
              Visit Sky Sports
              <span aria-hidden="true">↗</span>
            </a>
            {formattedUpdatedAt && (
              <p class="mt-3 text-xs text-indigo-100/80">Last headline: {formattedUpdatedAt}</p>
            )}
          </div>
        </div>
        <div class="flex flex-wrap gap-3 text-xs uppercase tracking-[0.25em] text-indigo-100/70">
          <span class="rounded-full border border-white/20 px-3 py-1">Football</span>
          <span class="rounded-full border border-white/20 px-3 py-1">F1</span>
          <span class="rounded-full border border-white/20 px-3 py-1">Cricket</span>
          <span class="rounded-full border border-white/20 px-3 py-1">Rugby</span>
          <span class="rounded-full border border-white/20 px-3 py-1">Boxing</span>
          <span class="rounded-full border border-white/20 px-3 py-1">Worldwide</span>
        </div>
      </div>
    </section>

    <section class="mx-auto max-w-6xl px-6 py-12">
      {feedError ? (
        <div class="rounded-xl border border-red-500/40 bg-red-500/10 px-6 py-8">
          <h2 class="text-xl font-semibold text-red-100">We couldn’t load the latest Sky Sports updates.</h2>
          <p class="mt-2 text-sm text-red-100/80">Error detail: {feedError}. Please refresh to try again.</p>
        </div>
      ) : feedItems.length === 0 ? (
        <div class="rounded-xl border border-white/10 bg-white/5 px-6 py-8 text-center text-base text-slate-200">
          Sky Sports hasn’t published any fresh updates right now. Check back shortly for the latest headlines.
        </div>
      ) : (
        <div class="grid gap-6 md:grid-cols-2">
          {feedItems.map((item) => (
            <article key={item.guid} class="group flex h-full flex-col rounded-2xl border border-white/10 bg-white/5 p-6 shadow-lg shadow-slate-900/30 transition hover:-translate-y-1 hover:border-indigo-400/60 hover:bg-white/10">
              <header class="flex flex-col gap-3">
                <p class="text-xs uppercase tracking-[0.3em] text-indigo-200">
                  {item.category ?? "Breaking"}
                </p>
                <h2 class="text-lg font-semibold text-white transition group-hover:text-indigo-100">{item.title}</h2>
                {item.publishedAt && (
                  <p class="text-xs text-indigo-200/80">{item.publishedAt.toLocaleString("en-GB", {
                    dateStyle: "medium",
                    timeStyle: "short",
                  })}</p>
                )}
              </header>
              {item.description && (
                <p class="mt-4 flex-1 text-sm leading-relaxed text-slate-200">
                  {item.description.length > 180
                    ? `${item.description.slice(0, 180)}…`
                    : item.description}
                </p>
              )}
              <footer class="mt-6 flex items-center justify-between text-sm">
                <a href={item.link} class="inline-flex items-center gap-2 font-medium text-indigo-200 underline-offset-4 transition hover:underline" target="_blank" rel="noreferrer">
                  Read full story
                  <span aria-hidden="true">↗</span>
                </a>
              </footer>
            </article>
          ))}
        </div>
      )}
    </section>
  </main>
</Layout>
